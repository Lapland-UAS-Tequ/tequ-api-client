[{"id":"82e4c029688a0e96","type":"subflow","name":"[API] Create datapacket","info":"Creates datapacket ready to send to Tequ-API. \n\nExpects output from any [AI] Detect subflows as input.\n\nSupports only Basler BIP2-1920 IP-camera at the moment.\n\nBasler IP-camera is polled regularly to update camera settings that are added to datapacket.\n","category":"Tequ-API Client","in":[{"x":80,"y":60,"wires":[{"id":"f58ebcf9db69a343"}]}],"out":[{"x":1100,"y":260,"wires":[{"id":"7d1a3c99beeb5e49","port":0}]}],"env":[{"name":"camera_model","type":"str","value":"Basler BIP2 series","ui":{"type":"select","opts":{"opts":[{"l":{"en-US":"Basler BIP2 series"},"v":"Basler BIP2 series"}]}}}],"meta":{"module":"node-red-contrib-tequ-api-create-datapacket","version":"0.0.1","author":"juha.autioniemi@lapinamk.fi","desc":"Creates datapacket ready to send to Tequ-API. Supports Basler BIP2-1920 IP-camera at the moment.","license":"MIT"},"color":"#3FADB5","icon":"node-red/parser-json.svg","status":{"x":1110,"y":560,"wires":[{"id":"2574186fb52d7cc5","port":0}]}},{"id":"4d6ace3bd96a61e3","type":"function","z":"82e4c029688a0e96","name":"Basler BIP2 series with exif data","func":"ts = msg.payload.image.exif.image.ModifyDate;\ndateValues = ts.split(\":\")\nmiddleSplit = dateValues[2].split(\" \")\nlocalTS = dateValues[0]+\"-\"+dateValues[1]+\"-\"+middleSplit[0]+\" \"+middleSplit[1]+\":\"+dateValues[3]+\":\"+dateValues[4]\nlatitude = Number(env.get(\"latitude\"))\nlongitude = Number(env.get(\"longitude\"))\ndatasource = msg.topic;\ncamera_parameters = global.get(\"cameras\")[msg.topic]\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nrandom_name = uuid.v4();\nimage_type = msg.payload.image.type\n\nif(image_type == \"jpg\"){\n    image_type = \"image/jpeg\"\n    file_extension = \".jpg\"\n}\nelse if(image_type == \"png\"){\n    image_type = \"image/png\"    \n    file_extension = \".png\"\n}\n\ncloudantMsg = {\"payload\":{}}\ncloudantMsg.token = flow.get(\"token\") || \"\"\ncloudantMsg.payload = {\n    \"type\": \"Feature\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [longitude, latitude]\n    },\n    \"properties\": {\n        \"datasource\":datasource,\n        \"local_timestamp\":localTS,\n        \"utc_timestamp\":localTS,\n        \"unix_timestamp\":localTS,\n        \"cos\":{\n            \"bucket\":\"\",\n            \"region\":\"\",\n            \"service_id\":\"\"\n        },\n        \"object\":{\n            \"type\":image_type,\n            \"data\":{\n                \"width\": msg.payload.image.width,\n                \"height\": msg.payload.image.height,\n                \"size\": (msg.payload.image.buffer).length,\n                \"exif\":msg.payload.image.exif,\n                \"parameters\":camera_parameters,\n                \"original\":{\n                    \"image\":(msg.payload.image.buffer).toString('base64'),\n                    \"objectname\":datasource+\"-\"+random_name+file_extension,\n                    \"thumbnail\":(msg.payload.image.thumbnail).toString('base64')\n                },\n                \"annotated\":{\n                    \"image\":(msg.payload.annotation.buffer).toString('base64'),\n                    \"objectname\":datasource+\"-\"+random_name+\"_annotated\"+file_extension,\n                    \"thumbnail\":(msg.payload.annotation.thumbnail).toString('base64')\n                }\n        }   \n        },\n        \"computer_vision\":{\n            \"type\":\"object detection\",\n            \"model\":msg.payload.inference.model,\n            \"inference_time\":msg.payload.inference.time_ms,\n            \"result\":msg.payload.inference.result\n        }\n    }\n}\n\nnode.status({fill:\"green\",shape:\"dot\",text: env.get(\"camera_model\")})\nreturn cloudantMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"uuid","module":"uuid"}],"x":850,"y":80,"wires":[["6ee38ab3af472031"]]},{"id":"6ee38ab3af472031","type":"moment","z":"82e4c029688a0e96","name":"Create UTC timestamp","topic":"","input":"payload.properties.local_timestamp","inputType":"msg","inTz":"Europe/Helsinki","adjAmount":0,"adjType":"days","adjDir":"add","format":"","locale":"en-US","output":"payload.properties.utc_timestamp","outputType":"msg","outTz":"ETC/UTC","x":820,"y":140,"wires":[["506738925f3fd028"]]},{"id":"506738925f3fd028","type":"moment","z":"82e4c029688a0e96","name":"Create Unix timestamp","topic":"","input":"payload.properties.local_timestamp","inputType":"msg","inTz":"Europe/Helsinki","adjAmount":0,"adjType":"days","adjDir":"add","format":"x","locale":"en-US","output":"payload.properties.unix_timestamp","outputType":"msg","outTz":"ETC/UTC","x":820,"y":200,"wires":[["7d1a3c99beeb5e49"]]},{"id":"7d1a3c99beeb5e49","type":"function","z":"82e4c029688a0e96","name":"Format unix ts","func":"unix_ts = parseInt(msg.payload.properties.unix_timestamp)\nmsg.payload.properties.unix_timestamp = unix_ts;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":260,"wires":[[]]},{"id":"0d0abc0c1ebff43f","type":"switch","z":"82e4c029688a0e96","name":"exif ModifyDate?","property":"msg.payload.image.exif.image","propertyType":"msg","rules":[{"t":"hask","v":"ModifyDate","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":550,"y":60,"wires":[["4d6ace3bd96a61e3"],[]]},{"id":"f58ebcf9db69a343","type":"switch","z":"82e4c029688a0e96","name":"Select camera model","property":"camera_model","propertyType":"env","rules":[{"t":"eq","v":"Basler BIP2 series","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":240,"y":60,"wires":[["0d0abc0c1ebff43f"],[]]},{"id":"fb3b4a63d666920f","type":"function","z":"82e4c029688a0e96","name":"BIP2 request","func":"timestamp                   = new Date().toISOString();\ntry{\n    cameras = JSON.parse(env.get(\"cameras\")) || []\n}\ncatch(err){\n    node.error(err,msg)\n    return null;\n}\n\nvar requests = []\n\nif(cameras.length == 0){\n    node.status({fill:\"red\",shape:\"dot\",text:\"No cameras defined in settings.js\"});\n    return null;\n}\nelse{\n    for(var i=0;i<cameras.length;i++){\n        idx = cameras[i]\n        var credentials = {\n          \"host\": env.get(\"ds_\"+idx+\"_ip\"),\n          \"username\": env.get(\"ds_\"+idx+\"_username\"),\n          \"password\": env.get(\"ds_\"+idx+\"_password\"),\n          \"path\":\"cgi-bin/param_if.cgi\"\n        }\n    \n        action = \".GetValue\";\n        \n        parameterArray = [\n            \"ImageControls.IRFilterState\",\n            \"Global.Temperature\",\n            \"Sensor.FrameRateMode\",\n            \"ImageControls.ExposureMode\",\n            \"ImageControls.BacklightCompensation\",\n            \"ImageControls.ExposureTime_us\",\n            \"ImageControls.Gain_dB\",\n            \"ImageControls.IrisMode\",\n            \"ImageControls.Sharpness\",\n            \"ImageControls.Saturation\",\n            \"ImageControls.Gamma\",\n            \"ImageControls.SaturationIRFilterOpen\",\n            \"ImageControls.Shadows\",\n            \"ImageControls.WhiteBalanceMode\",\n            \"ImageControls.RedGain\",\n            \"ImageControls.BlueGain\",\n            \"Motion.MotionDetectionMode\",\n            \"Motion.HistoryImageFrames\",\n            \"Motion.Granularity\",\n            \"Motion.ShowMotion\",\n            \"Motion.Sensitivity\",\n            \"Motion.MotionThreshold\",\n            \"Motion.AlarmOnDelay\",\n            \"Motion.AlarmOffDelay\"\n            ]\n        \n        paramArraySize = parameterArray.length;\n        \n        params = \"?NumActions=\"+paramArraySize;\n        for(var j=0;j<paramArraySize;j++){\n            params = params+\"&Action_\"+j+\"=\"+parameterArray[j]+action;\n        }\n        \n        var newMsg = {};\n        newMsg.topic    = env.get(\"ds_\"+idx+\"_id\");\n        newMsg.url      = \"http://\"+credentials.host+\"/\"+credentials.path+params;\n        newMsg.method   = 'GET';\n        newMsg.headers  = {\"Authorization\": \"Basic \"+ new Buffer(credentials.username+\":\"+credentials.password).toString('base64')}\n        newMsg.params   = parameterArray; \n        requests.push(newMsg)\n    }\n}\n\nnode.status({fill:\"green\",shape:\"dot\",text:timestamp});\nreturn [requests];","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":420,"wires":[["8100e18ef36428c7"]]},{"id":"75e4999f23e2e26f","type":"inject","z":"82e4c029688a0e96","name":"update","props":[{"p":"payload"}],"repeat":"15","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":100,"y":420,"wires":[["6133620881abb66f"]]},{"id":"8100e18ef36428c7","type":"http request","z":"82e4c029688a0e96","name":"","method":"use","ret":"txt","paytoqs":false,"url":"","tls":"","persist":false,"proxy":"","authType":"","x":670,"y":420,"wires":[["c4b5c5377ed23048"]]},{"id":"e764a1792257063a","type":"function","z":"82e4c029688a0e96","name":"Parse & set response","func":"data = msg.payload;\nparams = msg.params;\ndataArray = data.split(\"\\n\");\nmsg.dataArray = dataArray;\ntopic = msg.topic;\n\nnewObject = {\n    \"timestamp\":new Date().toISOString()\n}\n\nfor(i=0;i<dataArray.length;i++){\n \n    newObject[params[i]] = {};\n    \n    value =  parseInt(dataArray[i].split(\"=\")[1]);\n    \n    if(isNaN(value)){\n        value = dataArray[i].split(\"=\")[1];\n    }\n    \n    \n    newObject[params[i]] = value;\n}\n\nmsg.payload = newObject;\n\ncameras = global.get(\"cameras\") || {}\ncameras[topic] = {}\ncameras[topic] = newObject\nglobal.set(\"cameras\",cameras)\n\nnode.status({fill:\"blue\",shape:\"dot\",text:\"Camera parameters updated @\"+msg.update_time})","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1120,"y":480,"wires":[]},{"id":"c4b5c5377ed23048","type":"switch","z":"82e4c029688a0e96","name":"statusCode = 200","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"num"}],"checkall":"false","repair":false,"outputs":1,"x":870,"y":420,"wires":[["bd766f90fc8b860d"]]},{"id":"1ee301ec2d5f61d9","type":"comment","z":"82e4c029688a0e96","name":"Request camera parameters from camera. Supports Basler BIP2-series IP-cameras.","info":"","x":330,"y":340,"wires":[]},{"id":"6133620881abb66f","type":"switch","z":"82e4c029688a0e96","name":"If Basler BIP2 series","property":"camera_model","propertyType":"env","rules":[{"t":"eq","v":"Basler BIP2 series","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":280,"y":420,"wires":[["fb3b4a63d666920f"]]},{"id":"e3db86213859eff0","type":"comment","z":"82e4c029688a0e96","name":"Camera IP addresses are defined in settings.js file.","info":"","x":230,"y":380,"wires":[]},{"id":"bd766f90fc8b860d","type":"moment","z":"82e4c029688a0e96","name":"ts","topic":"","input":"","inputType":"date","inTz":"Europe/Kiev","adjAmount":0,"adjType":"days","adjDir":"add","format":"HH:mm:ss","locale":"en-US","output":"update_time","outputType":"msg","outTz":"Europe/Kiev","x":830,"y":480,"wires":[["e764a1792257063a"]]},{"id":"5ffe13112f670db3","type":"inject","z":"82e4c029688a0e96","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"1","topic":"","payloadType":"date","x":150,"y":140,"wires":[["22d59dc844d5a9f4"]]},{"id":"22d59dc844d5a9f4","type":"function","z":"82e4c029688a0e96","name":"Update status","func":"node.status({fill:\"green\",shape:\"dot\",text:\"Camera model: \"+env.get(\"camera_model\")})","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":140,"wires":[]},{"id":"2574186fb52d7cc5","type":"status","z":"82e4c029688a0e96","name":"","scope":null,"x":980,"y":560,"wires":[[]]},{"id":"cae9429c829d6c2c","type":"subflow:82e4c029688a0e96","z":"d994f01a5b816cf9","name":"","x":1050,"y":1400,"wires":[[]]}]